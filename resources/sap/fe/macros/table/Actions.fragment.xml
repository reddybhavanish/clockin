<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:core="sap.ui.core"
	xmlns="sap.m"
	template:require="{
		ID: 'sap/fe/core/helpers/StableIdHelper',
		COMMON: 'sap/fe/macros/CommonHelper',
		CORE: 'sap/fe/core/AnnotationHelper',
		FIELD: 'sap/fe/macros/field/FieldHelper',
		TABLE: 'sap/fe/macros/table/TableHelper'
	}"
>
	<template:if test="{this>actions}">
	<template:repeat list="{actions>}" var="action">
		<template:if test="{= ${action>type} === 'Default'}">
			<Button
					core:require="{= '{Handler: \'' + ${action>handlerModule} + '\'}'}"
					id="{= ID.generate([${this>id},${action>controlId}])}"
					text="{action>text}"
					press="{= 'Handler.' + ${action>handlerMethod} }"
					type="Transparent"
					visible="{action>visible}"
					enabled="{action>enabled}"
				/>
		</template:if>
	</template:repeat>
	</template:if>
	<template:repeat list="{lineItem>}" var="dataField">
		<template:if test="{= !(${dataField>./@com.sap.vocabularies.UI.v1.Hidden} === true) }">
			<template:if
				test="{= ${dataField>$Type} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' &amp;&amp; ${dataField>Inline} !== true &amp;&amp; !(${dataField>Determining} === true ) }"
			>
				<template:then>
					<template:if test="{= ${this>onCallAction} &amp;&amp; ${this>selectedContextsModel} &amp;&amp; (${this>id})}">
						<template:with path="dataField>Action" helper="COMMON.getActionContext" var="actionContext">
							<template:with path="dataField>Action" helper="COMMON.getPathToBoundActionOverload" var="isBound">
								<template:if test="{= ${isBound>$IsBound} !== true || ${actionContext>@Org.OData.Core.V1.OperationAvailable} !== false }">
									<Button
										id="{= ID.generate([${this>id}, ${dataField>}])}"
										text="{dataField>Label}"
										press="{= ${this>onCallAction} + '(\'' + ${dataField>Action} + '\' , { contexts:
										${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/selectedContexts},
										entitySetName: \'' + ${collection>@sapui.name} +'\',
										invocationGrouping : \'' + (${dataField>InvocationGrouping/$EnumMember} === 'com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet' ?'ChangeSet' : 'Isolated') + '\',
										prefix: \'' + ${this>id} + '\',
										operationAvailableMap: \'' + ${lineItem>@@TABLE.getOperationAvailableMap} + '\',
										model: ${$source>/}.getModel(),
										label: \'' + ${dataField>Label} + '\'})'}"
										enabled="{= ${isBound>$IsBound} === true
										? '{= ${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/numberOfSelectedContexts} > 0 &amp;&amp; ${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/' + ${dataField>Action} + '}}'
										: true }"
										visible="{= ${dataField>./@com.sap.vocabularies.UI.v1.Hidden} ? (${dataField>./@com.sap.vocabularies.UI.v1.Hidden/$Path} ? ${dataField>./@com.sap.vocabularies.UI.v1.Hidden/$Path@@TABLE.getHiddenPathExpressionForTableActions} : !${dataField>./@com.sap.vocabularies.UI.v1.Hidden}) : true
										}"
									>
									</Button>
								</template:if>
							</template:with>
						</template:with>
					</template:if>
				</template:then>
				<template:elseif
					test="{= ${dataField>$Type} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation' &amp;&amp; ${dataField>Inline} !== true &amp;&amp; !(${dataField>Determining} === true ) }"
				>
					<template:if test="{= ${this>id} &amp;&amp; ${this>selectedContextsModel}}">
						<Button
							id="{= ID.generate([${this>id}, ${dataField>}])}"
							text="{dataField>Label}"
							press="{= ${this>onDataFieldForIBN} ? ${this>onDataFieldForIBN} + '($controller, \'' + ${dataField>SemanticObject} + '\' ,\'' + ${dataField>Action} + '\' , \'' + JSON.stringify(${dataField>Mapping}) + '\', ' + (${dataField>RequiresContext} === true ? '${' + ${this>selectedContextsModel} + '>/$contexts/' + (${this>id}) + '/selectedContexts}' : 'undefined') + ')' : undefined }"
							enabled="{= ${dataField>RequiresContext}
                            ? '{= %{' + ${this>selectedContextsModel} + '>/$contexts/' + (${this>id}) + '/numberOfSelectedContexts} >= 1}'
                            : true
                            }"
							visible="{= '{actionsVisibility>/' + ${dataField>SemanticObject} + '-' + ${dataField>Action} + '}'}"
						/>
					</template:if>
				</template:elseif>
			</template:if>
		</template:if>
	</template:repeat>
	<template:if
		test="{= ${collection>@com.sap.vocabularies.Common.v1.DraftRoot} || ${targetCollection>@com.sap.vocabularies.Common.v1.DraftNode} || ${collection>@@TABLE.isStickySessionSupported}}"
	>
		<template:if test="{= TABLE.createButtonTemplating(${this>}, false) }">
			<Button
				id="{= ID.generate([${this>id}, 'StandardAction', 'Create'])}"
				text="{this.i18n>table.CREATE}"
				press="{= ${this>onCreate} + '(${$source>}.getParent().getParent().getParent()._getRowBinding(), {creationMode: ${$source>}.getParent().getParent().getParent().data(\'creationMode\'), createAtEnd: ' + ${this>createAtEnd} + ', tableId: \'' + ${this>id} + '\' })' }"
				type="Transparent"
				visible="{= ${this>showCreate} || true }"
				enabled="{= (${collection>$kind} === 'EntitySet') ? undefined : (CORE.getNavigationInsertableRestrictions(${collection>},${collection>@sapui.name}, ${parentEntitySet>@Org.OData.Capabilities.V1.NavigationRestrictions/RestrictedProperties}, ${targetCollection>@Org.OData.Capabilities.V1.InsertRestrictions/Insertable}, false))}"
			/>
		</template:if>
		<template:if test="{= TABLE.deleteButtonTemplating(${this>}) }">
			<Button
				id="{= ID.generate([${this>id}, 'StandardAction', 'Delete'])}"
				text="{this.i18n>table.DELETE}"
				press="{= ${this>onDelete} + '(${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deletableContexts},{id:\'' + ${this>id} +'\',  entitySetName: \'' + ${collection>@sapui.name} +'\', numberOfSelectedContexts:${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/selectedContexts}.length , unSavedContexts:${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/unSavedContexts}, lockedContexts:${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/lockedContexts}, controlId:${' + ${this>selectedContextsModel} + '>/$contexts/' +  ${this>id} + '/controlId} })' }"
				type="Transparent"
				visible="{this>showDelete}"
				enabled="{= '{= ((%{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deletableContexts} &amp;&amp; %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deletableContexts}.length > 0) || (%{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/unSavedContexts} &amp;&amp; %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/unSavedContexts}.length > 0)) ? %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deleteEnabled} : false}' }"
			/>
		</template:if>
	</template:if>
</core:FragmentDefinition>
