<mvc:View
    xmlns="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:f="sap.f"
    xmlns:layout="sap.ui.layout"
    xmlns:mvc="sap.ui.core.mvc"
    controllerName="sap.ushell.applications.PageComposer.controller.PageDetailEdit"
    core:require="{
        formatMessage: 'sap/base/strings/formatMessage'
    }">
    <f:DynamicPage
        id="pageDetailEdit"
        fitContent="true"
        headerExpanded="{/headerExpanded}"
        class="sapUshellPageLayout sapUiNoContentPadding">
        <f:title>
            <f:DynamicPageTitle id="dynamicPageTitle">
                <f:heading>
                    <HBox>
                        <Title id="pageId" text="{/page/id}" />
                        <ObjectStatus
                            active="true"
                            id="assignmentStatus"
                            visible="{= ${/page/assignmentState} !== &quot;Success&quot;}"
                            class="sapUiSmallMarginBottom sapUiSmallMarginBegin"
                            text="{/page/assignmentCodeStatus}"
                            state="{/page/assignmentState}" />
                    </HBox>
                </f:heading>
                <f:expandedContent>
                    <HBox id="hboxExpanded" displayInline="true">
                        <ObjectAttribute id="objectAttributeDescriptionExpanded" text="{/page/description}" />
                    </HBox>
                </f:expandedContent>
                <f:snappedContent>
                    <!-- Nothing (to maximize working area when the header is snapped) -->
                </f:snappedContent>
                <f:actions>
                    <Button
                        id="buttonEditHeader"
                        text="{i18n>Button.EditHeader}"
                        type="Transparent"
                        press=".openEditPageHeaderDialog">
                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-EditHeader" writeToDom="true" /></customData>
                    </Button>
                </f:actions>
                <f:navigationActions>
                    <Button
                        id="buttonPreview"
                        text="{i18n>Button.PagePreview}"
                        type="Transparent"
                        press=".preview">
                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-PagePreview" writeToDom="true" /></customData>
                    </Button>
                </f:navigationActions>
            </f:DynamicPageTitle>
        </f:title>
        <f:header>
            <f:DynamicPageHeader id="dynamicPageHeader" pinnable="false">
                <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.PageInfo" type="XML" />
            </f:DynamicPageHeader>
        </f:header>
        <f:content>
            <layout:DynamicSideContent
                id="layoutContent"
                sideContentFallDown="BelowM"
                sideContentPosition="End"
                containerQuery="true"
                showSideContent="{/catalogsExpanded}">
                <layout:mainContent>
                    <VBox id="panelWrapper"> <!-- wrapper to make the panel calculate the correct height -->
                        <Panel
                            id="panel"
                            height="100%"
                            accessibleRole="Region"
                            backgroundDesign="Transparent"
                            class="sapUiNoContentPadding">
                            <headerToolbar>
                                <OverflowToolbar id="layoutHeader" design="Transparent" height="3rem" class="sapUiTinyMarginTop">
                                    <Title text="{i18n>Title.Layout}" id="layoutTitle" />
                                    <Button
                                        id="layoutButtonMessage"
                                        icon="sap-icon://message-popup"
                                        visible="{= !!(${/messages}.length) }"
                                        tooltip="{
                                            parts: ['i18n>Button.Issues', { path: '/messages', formatter: '._formatLength' } ],
                                            formatter: 'formatMessage'
                                        }"
                                        text="{= ${/messages}.length }"
                                        type="Emphasized"
                                        press=".handleMessagePopoverPress">
                                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-ErrorMessage" writeToDom="true" /></customData>
                                    </Button>
                                    <ToolbarSpacer id="layoutHeaderSpacer" />
                                    <Button id="layoutButtonSave" text="{i18n>Button.Save}" type="Emphasized" press=".onSave" enabled="{/dirtyPage}">
                                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-Save" writeToDom="true" /></customData>
                                    </Button>
                                    <Button id="layoutButtonCancel" text="{i18n>Button.Cancel}" type="Transparent" press=".onCancel">
                                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-Cancel" writeToDom="true" /></customData>
                                    </Button>
                                    <Button
                                        id="contextSelectorButton"
                                        visible="{= ${roles>/available}.length > 0}"
                                        text="{
                                            parts:['i18n>Button.ContextSelector', 'roles>/selectedCountText'],
                                            formatter: 'formatMessage'}"
                                        type="Transparent"
                                        press=".onOpenContextSelector">
                                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-OpenContextSelector" writeToDom="true" /></customData>
                                    </Button>
                                    <Button
                                        id="toggleCatalogsButton"
                                        press=".onUpdateSideContentVisibility"
                                        text = "{= ${/catalogsExpanded} ? ${i18n>Button.HideCatalogs} : ${i18n>Button.ShowCatalogs}}"
                                        type="Transparent">
                                        <customData><core:CustomData key="help-id" value="FLPPage-manage-PageDetailEdit-Button-ShowCatalog" writeToDom="true" /></customData>
                                    </Button>
                                </OverflowToolbar>
                            </headerToolbar>
                            <content>
                                <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.Page" type="XML" />
                            </content>
                        </Panel>
                    </VBox>
                </layout:mainContent>
                <layout:sideContent>
                    <core:Fragment fragmentName="sap.ushell.applications.PageComposer.view.TileSelector" type="XML" />
                </layout:sideContent>
            </layout:DynamicSideContent>
        </f:content>
    </f:DynamicPage>
</mvc:View>
